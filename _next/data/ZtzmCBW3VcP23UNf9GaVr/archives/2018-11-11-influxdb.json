{"pageProps":{"post":{"slug":"2018-11-11-influxdb","title":"InfluxDB","categories":["memo"],"image":"https://koka831.github.io/img/icon.png","tags":["database","時系列データ"],"content":"<h2 id=\"background\"><a href=\"#background\">Background</a></h2>\n<p>センサから取得した時系列データを解析することになった.<br>\n普段の研究ではDynamoDB等のNoSQLを利用しているのだけど, 今回のセンサデータはセンサ数が多い上に欠損率が結構高い.</p>\n<p>なので,</p>\n<ul>\n<li>書き込み速度重視</li>\n<li>データの線形補間ができる・やりやすい</li>\n<li>できればローカルで使える\nことを要件として調査した.<br>\n補間に関してはDB側で巻いてくれると嬉しいけど, パフォーマンスをみてクライアント側でやるのでもまあいい.<br>\nこれはそのときのログと, (結果的にInfluxDBを選択したのだけど)その結果をまとめたもの.</li>\n</ul>\n<h1 id=\"調査\"><a href=\"#調査\">調査</a></h1>\n<p>今回調べたソフトウェアは以下.</p>\n<ul>\n<li>OpenTSDB 2.3.0</li>\n<li>InfluxDB 1.7</li>\n<li>Prometheus 2.5.0</li>\n</ul>\n<p>調査対象はデータベースの中でも時系列データベースと呼ばれるものに絞った.<br>\n一般的なRDBはそのインデクスにBTree(もしくはB+Tree)を用いているが, BTreeの挿入コストはO(n) ~ O(log n)程度かかってしまう. もちろん最適化はされているのだろうからコストは抑えられるだろうが, 挿入に限ってはO(1)で行いたい.  このあたり勉強しないとなあ</p>\n<h2 id=\"opentsdb\"><a href=\"#opentsdb\">OpenTSDB</a></h2>\n<ul>\n<li>open source time series database</li>\n<li>store trillions of data points(!)</li>\n<li>scales using HBase</li>\n</ul>\n<p>分散型の時系列データベース. OpenTSDBでのデータはHBase/Hadoopのクラスタ側で保持する.</p>\n<p>PinterestやYahooで使われているとのこと<sup><a href=\"#user-content-fn-1\" id=\"user-content-fnref-1\" data-footnote-ref aria-describedby=\"footnote-label\">1</a></sup>.\nYahooの例では, 200k TSD / s の書き込みを50サーバで行っており, 10億件を超えるデータを保持している.</p>\n<h4 id=\"tsd形式\"><a href=\"#tsd形式\">TSD形式</a></h4>\n<ul>\n<li>metric: 時系列データの属性の名前. RDBでいうテーブル名.</li>\n<li>timestamp</li>\n<li>value: integer / float</li>\n<li>tag(s): { \"key\": \"value\" }のペア.</li>\n</ul>\n<p>tagについては最低一つつける必要がある(最大8つまでサポートされているが, usually up to 4 or 5 tags とのこと).<br>\n時系列DBではvalueが数値しか取れない代わりに, tagsのkeyを組み合わせて集計を行うみたい.</p>\n<p>APIはHTTP RestとTelnet Style(!)がある.</p>\n<p>補間については, 分散データベースなので物理的な断片化が考慮されており, OpenTSDB側で線形補間・スキップ・ゼロ補間がサポートされている.</p>\n<h2 id=\"prometheus\"><a href=\"#prometheus\">Prometheus</a></h2>\n<ul>\n<li>monitoring system &#x26; time series database</li>\n</ul>\n<p>今回調べるまで存在を知らなかった. 用途を見るとどうもElasticSearch等の用途と似ていて, モニター側に重きを置いているっぽい.</p>\n<p>そのためデータは別口からインポートする必要がある.</p>\n<p>データについては15日間分の保持がデフォルトのようで, Prometheus単体で利用するのは(データ解析のフェーズにおいても)今回の用途では厳しそう.</p>\n<h2 id=\"influxdb\"><a href=\"#influxdb\">InfluxDB</a></h2>\n<h4 id=\"tsd形式-1\"><a href=\"#tsd形式-1\">TSD形式</a></h4>\n<p><a href=\"https://docs.influxdata.com/influxdb/v1.7/write_protocols/line_protocol_tutorial/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Line Protocol</a>と呼ばれる行データの書式に従う.<br>\n以下の書式のように, 配列はスペースなしのカンマ区切りで, tagとmeasurementの区切り, measurementとtimestampの区切りにはスペースをいれる.<br>\nmeasurementが値部分となっていて, こちらもtagと同様カンマ区切りで複数のtag付のmeasurementを持てる.</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">metrix,&#x26;lt;tag_key&#x26;gt;=&#x26;lt;tag_value&#x26;gt;,&#x26;lt;tag_key&#x26;gt;=&#x26;lt;tag_value&#x26;gt; &#x26;lt;measurement&#x26;gt;=&#x26;lt;value&#x26;gt; &#x26;lt;timestamp&#x26;gt;</code></pre></div>\n<p>Measurementにはinteger, floatの他にstring, booleanも扱える.</p>\n<p>補間については, <code>fill()</code>を用いてnull, 指定値, 線形補間, 前データ値が利用できる.<sup><a href=\"#user-content-fn-2\" id=\"user-content-fnref-2\" data-footnote-ref aria-describedby=\"footnote-label\">2</a></sup></p>\n<p><a href=\"https://www.influxdata.com/blog/influxdb-markedly-outperforms-opentsdb-in-time-series-data-metrics-benchmark/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">blog</a> によるとwrite performanceがOpenTSDBの9倍.</p>\n<h2 id=\"まとめ\"><a href=\"#まとめ\">まとめ</a></h2>\n<p>結論としては補間が必要なデータストアにはInfluxDB一択だと思う.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">DB</th>\n<th align=\"center\">書き込み</th>\n<th align=\"center\">データ量</th>\n<th align=\"center\">補間</th>\n<th align=\"center\">ローカル</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">OpenTSDB</td>\n<td align=\"center\">○</td>\n<td align=\"center\">◎</td>\n<td align=\"center\">○</td>\n<td align=\"center\">Docker</td>\n</tr>\n<tr>\n<td align=\"center\">InfluxDB</td>\n<td align=\"center\">◎</td>\n<td align=\"center\">○</td>\n<td align=\"center\">○</td>\n<td align=\"center\">Docker</td>\n</tr>\n<tr>\n<td align=\"center\">Prometheus</td>\n<td align=\"center\">-</td>\n<td align=\"center\">x</td>\n<td align=\"center\">-</td>\n<td align=\"center\">Docker</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"ref\"><a href=\"#ref\">ref</a></h2>\n<section data-footnotes class=\"footnotes\"><h2 id=\"footnote-label\" class=\"sr-only\"><a href=\"#footnote-label\">Footnotes</a></h2>\n<ol>\n<li id=\"user-content-fn-1\">\n<p><a href=\"https://www.slideshare.net/HBaseCon/operations-session-3-49043534?qid=5547eada-f70d-4730-bacb-6aeb6f37c068&#x26;v=&#x26;b=&#x26;from_search=5\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">slideshare</a> <a href=\"#user-content-fnref-1\" data-footnote-backref class=\"data-footnote-backref\" aria-label=\"Back to content\">↩</a></p>\n</li>\n<li id=\"user-content-fn-2\">\n<p><a href=\"https://docs.influxdata.com/influxdb/v1.3/query_language/data_exploration/#advanced-group-by-time-syntax\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">document</a> <a href=\"#user-content-fnref-2\" data-footnote-backref class=\"data-footnote-backref\" aria-label=\"Back to content\">↩</a></p>\n</li>\n</ol>\n</section>","description":"色々と必要になったのでまとめ","commits":[{"title":"copy md","date":"2021-01-30 22:18:17","hash":"35b550ae","diff":"<div class=\"remark-highlight\"><pre data-file=\"35b550ae.patch\" class=\"language-git  language-diff\"><code class=\"language-git\"><span class=\"token commit-sha1\">commit 35b550ae83af4efaeadf33471c8ca8a32c1079c8</span>\nAuthor: koka &#x26;<a href=\"mailto:lt;koka.code@gmail.com\" class=\"token email-link\">lt;koka.code@gmail.com</a>&#x26;gt;\nDate:   Sat Jan 30 22:18:17 2021 +0900\n\n  copy md\n\ndiff --git a/_posts/2018-11-11-influxdb.md b/_posts/2018-11-11-influxdb.md\nnew file mode 100644\nindex 0000000..534d52b\n<span class=\"token deleted\">--- /dev/null</span>\n<span class=\"token inserted\">+++ b/_posts/2018-11-11-influxdb.md</span>\n<span class=\"token coord\">@@ -0,0 +1,97 @@</span>\n<span class=\"token inserted\">+---</span>\n<span class=\"token inserted\">+title: InfluxDB</span>\n<span class=\"token inserted\">+date: 2018-11-11</span>\n<span class=\"token inserted\">+categories:</span>\n<span class=\"token inserted\">+- memo</span>\n<span class=\"token inserted\">+tags:</span>\n<span class=\"token inserted\">+  - database</span>\n<span class=\"token inserted\">+  - 時系列データ</span>\n<span class=\"token inserted\">+description: 色々と必要になったのでまとめ</span>\n<span class=\"token inserted\">+---</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+## Background</span>\n<span class=\"token inserted\">+センサから取得した時系列データを解析することになった.  </span>\n<span class=\"token inserted\">+普段の研究ではDynamoDB等のNoSQLを利用しているのだけど, 今回のセンサデータはセンサ数が多い上に欠損率が結構高い.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+なので, </span>\n<span class=\"token inserted\">+- 書き込み速度重視</span>\n<span class=\"token inserted\">+- データの線形補間ができる・やりやすい</span>\n<span class=\"token inserted\">+- できればローカルで使える</span>\n<span class=\"token inserted\">+ことを要件として調査した.   </span>\n<span class=\"token inserted\">+補間に関してはDB側で巻いてくれると嬉しいけど, パフォーマンスをみてクライアント側でやるのでもまあいい.  </span>\n<span class=\"token inserted\">+これはそのときのログと, (結果的にInfluxDBを選択したのだけど)その結果をまとめたもの.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+# 調査</span>\n<span class=\"token inserted\">+今回調べたソフトウェアは以下.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+- OpenTSDB 2.3.0</span>\n<span class=\"token inserted\">+- InfluxDB 1.7</span>\n<span class=\"token inserted\">+- Prometheus 2.5.0</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+調査対象はデータベースの中でも時系列データベースと呼ばれるものに絞った.  </span>\n<span class=\"token inserted\">+一般的なRDBはそのインデクスにBTree(もしくはB+Tree)を用いているが, BTreeの挿入コストはO(n) ~ O(log n)程度かかってしまう. もちろん最適化はされているのだろうからコストは抑えられるだろうが, 挿入に限ってはO(1)で行いたい.  このあたり勉強しないとなあ</span>\n<span class=\"token inserted\">+## OpenTSDB</span>\n<span class=\"token inserted\">+- open source time series database</span>\n<span class=\"token inserted\">+- store trillions of data points(!)</span>\n<span class=\"token inserted\">+- scales using HBase</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+分散型の時系列データベース. OpenTSDBでのデータはHBase/Hadoopのクラスタ側で保持する.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+PinterestやYahooで使われているとのこと[^1].</span>\n<span class=\"token inserted\">+Yahooの例では, 200k TSD / s の書き込みを50サーバで行っており, 10億件を超えるデータを保持している.  </span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+#### TSD形式</span>\n<span class=\"token inserted\">+- metric: 時系列データの属性の名前. RDBでいうテーブル名.</span>\n<span class=\"token inserted\">+- timestamp </span>\n<span class=\"token inserted\">+- value: integer / float</span>\n<span class=\"token inserted\">+- tag(s): { \"key\": \"value\" }のペア. </span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+tagについては最低一つつける必要がある(最大8つまでサポートされているが, usually up to 4 or 5 tags とのこと).  </span>\n<span class=\"token inserted\">+時系列DBではvalueが数値しか取れない代わりに, tagsのkeyを組み合わせて集計を行うみたい.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+APIはHTTP RestとTelnet Style(!)がある. </span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+補間については, 分散データベースなので物理的な断片化が考慮されており, OpenTSDB側で線形補間・スキップ・ゼロ補間がサポートされている.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+## Prometheus</span>\n<span class=\"token inserted\">+- monitoring system &#x26; time series database</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+今回調べるまで存在を知らなかった. 用途を見るとどうもElasticSearch等の用途と似ていて, モニター側に重きを置いているっぽい.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+そのためデータは別口からインポートする必要がある.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+データについては15日間分の保持がデフォルトのようで, Prometheus単体で利用するのは(データ解析のフェーズにおいても)今回の用途では厳しそう.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+## InfluxDB</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+#### TSD形式</span>\n<span class=\"token inserted\">+[Line Protocol](https://docs.influxdata.com/influxdb/v1.7/write_protocols/line_protocol_tutorial/)と呼ばれる行データの書式に従う.  </span>\n<span class=\"token inserted\">+以下の書式のように, 配列はスペースなしのカンマ区切りで, tagとmeasurementの区切り, measurementとtimestampの区切りにはスペースをいれる.  </span>\n<span class=\"token inserted\">+measurementが値部分となっていて, こちらもtagと同様カンマ区切りで複数のtag付のmeasurementを持てる.</span>\n<span class=\"token inserted\">+\\```</span>\n<span class=\"token inserted\">+metrix,&#x26;lt;tag_key&#x26;gt;=&#x26;lt;tag_value&#x26;gt;,&#x26;lt;tag_key&#x26;gt;=&#x26;lt;tag_value&#x26;gt; &#x26;lt;measurement&#x26;gt;=&#x26;lt;value&#x26;gt; &#x26;lt;timestamp&#x26;gt;</span>\n<span class=\"token inserted\">+\\```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+Measurementにはinteger, floatの他にstring, booleanも扱える.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+補間については, `fill()`を用いてnull, 指定値, 線形補間, 前データ値が利用できる.[^2]</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+[blog](https://www.influxdata.com/blog/influxdb-markedly-outperforms-opentsdb-in-time-series-data-metrics-benchmark/) によるとwrite performanceがOpenTSDBの9倍.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+## まとめ</span>\n<span class=\"token inserted\">+結論としては補間が必要なデータストアにはInfluxDB一択だと思う.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+|   DB   | 書き込み |  データ量 |  補間 | ローカル |</span>\n<span class=\"token inserted\">+|:------:|:--------:|:---------:|:-----:|:--------:|</span>\n<span class=\"token inserted\">+|OpenTSDB|  ○       |  ◎        |   ○   | Docker   |</span>\n<span class=\"token inserted\">+|InfluxDB|  ◎       |  ○        |   ○   | Docker   |</span>\n<span class=\"token inserted\">+|Prometheus| -      |  x        |   -   | Docker   |</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+## ref</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+[^1]: [slideshare](https://www.slideshare.net/HBaseCon/operations-session-3-49043534?qid=5547eada-f70d-4730-bacb-6aeb6f37c068&#x26;v=&#x26;b=&#x26;from_search=5)</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+[^2]: [document](https://docs.influxdata.com/influxdb/v1.3/query_language/data_exploration/#advanced-group-by-time-syntax)</span>\n</code></pre></div>"}],"publishedAt":"2018-11-11","updatedAt":"2021-01-30"}},"__N_SSG":true}