{"pageProps":{"post":{"slug":"2019-02-09-minpro2019","title":"みんなのプロコン 2019","categories":["Competitive Programming"],"image":"https://koka831.github.io/img/icon.png","tags":["AtCoder","TODO"],"content":"<p>みんなのプロコン 2019の参加記録.</p>\n<h2 id=\"b---path\"><a href=\"#b---path\"><a href=\"https://atcoder.jp/contests/yahoo-procon2019-qual/tasks/yahoo_procon2019_qual_b\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">B - Path</a></a></h2>\n<p>4つの街と3つの道が与えられる. 一筆書で全ての街を訪れることができるか.</p>\n<p>制約</p>\n<blockquote>\n<p>同じ街の対の間を結ぶ道は複数存在しない\nどの2つの街の間も、道を何本か通ることで行き来することができる</p>\n</blockquote>\n<p>より, 全ての街を訪れることは可能であることがわかる.\nこのとき道と街の組み合わせしてありうるのは以下の2パターン.</p>\n<div class=\"graph-wrapper\">\n<div>\n<div class=\"graph graph1\">\n  <div class=\"edge\" />\n  <div class=\"node none\" />\n  <div class=\"edge\" />\n</div>\n<div class=\"graph\">\n  <div class=\"edge\" />\n  <div class=\"node\" />\n  <div class=\"edge cross vertical\" />\n</div>\n<div class=\"label\">A</div>\n</div>\n<div>\n<div class=\"graph graph2\">\n  <div class=\"edge\" />\n  <div class=\"node\" />\n  <div class=\"edge\" />\n</div>\n<div class=\"graph\">\n  <div class=\"edge\" />\n  <div class=\"node\" />\n  <div class=\"edge vertical\" />\n</div>\n<div class=\"label\">B</div>\n</div>\n</div>\n<p>一筆書き出来るのはB.<br>\nAは1つの街から3本以上の道が存在する場合なので, 街から生えている道の本数で判定すればいい.</p>\n<h3 id=\"解答\"><a href=\"#解答\">解答</a></h3>\n<div class=\"remark-highlight\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">use</span> <span class=\"token namespace\">std<span class=\"token punctuation\">::</span></span>io<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> b <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> c <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> d <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token number\">0</span><span class=\"token punctuation\">..</span><span class=\"token number\">3</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> ab <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">usize</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> ab <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">match</span> i <span class=\"token punctuation\">{</span>\n                <span class=\"token number\">1</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                <span class=\"token number\">2</span> <span class=\"token operator\">=></span> b <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                <span class=\"token number\">3</span> <span class=\"token operator\">=></span> c <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                <span class=\"token number\">4</span> <span class=\"token operator\">=></span> d <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                _ <span class=\"token operator\">=></span> <span class=\"token macro property\">unreachable!</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n \n    <span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> <span class=\"token number\">2</span> <span class=\"token operator\">||</span> b <span class=\"token operator\">></span> <span class=\"token number\">2</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">></span> <span class=\"token number\">2</span> <span class=\"token operator\">||</span> d <span class=\"token operator\">></span> <span class=\"token number\">2</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NO\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"YES\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2 id=\"c---when-i-hit-my-pocket\"><a href=\"#c---when-i-hit-my-pocket\"><a href=\"https://atcoder.jp/contests/yahoo-procon2019-qual/tasks/yahoo_procon2019_qual_c\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">C - When I hit my pocket...</a></a></h2>\n<p>手持ちのビスケット1枚, 0円の状態から</p>\n<ul>\n<li>持っているビスケットを増やす</li>\n<li>ビスケット1枚をA円に交換</li>\n<li>1円をビスケットB枚の交換</li>\n</ul>\n<p>以上の操作を好きな順に<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span>回行ってビスケットの枚数を最大化する. なお虚無からビスケットを生成できるらしい.</p>\n<p>ビスケット → 円 → ビスケットの両替には2ターン消費するので, 2枚以上の利益がなければ愚直にビスケットを増やすのと変わらない.</p>\n<p>なので <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>−</mo><mi>A</mi><mo>&#x3C;</mo><mo>=</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">B-A &#x3C;= 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span></span>の場合にはビスケットを増やす操作だけ行うのが最善.</p>\n<p><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>−</mo><mi>A</mi><mo>></mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">B-A>2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span></span>の場合には, ビスケット→ 円→ ビスケット の操作でビスケットを<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>B</mi><mo>−</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(B - A)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span></span>枚増産できる. 最終的に円を持っていても意味がないので, この一連の操作は操作は同じ回数行いたい.</p>\n<p>簡単のために, ビスケットを0枚もっている状態から<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">k + 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span>回の操作を行えるとする.<br>\nアプローチとしては,</p>\n<ol>\n<li>A枚たまるまでビスケットを増やす</li>\n<li>残り<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn><mo>−</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">k + 1 - A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span></span>回の操作で両替を繰り返す</li>\n</ol>\n<p>手順2は<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">⌊</mo><mo stretchy=\"false\">(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo>−</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mn>2</mn><mo stretchy=\"false\">⌋</mo></mrow><annotation encoding=\"application/x-tex\">\\lfloor(k+1-a)/2\\rfloor</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">⌊(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mord\">/2</span><span class=\"mclose\">⌋</span></span></span></span></span>回行うことができる. 偶奇によっては操作回数が一回あまるが,\nここでビスケット→ 円の両替をしても仕方がないのでビスケットを1枚増やす.</p>\n<h3 id=\"解答-1\"><a href=\"#解答-1\">解答</a></h3>\n<div class=\"remark-highlight\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">use</span> <span class=\"token namespace\">std<span class=\"token punctuation\">::</span></span>io<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">u64</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> a <span class=\"token operator\">>=</span> b <span class=\"token operator\">||</span> b <span class=\"token operator\">-</span> a <span class=\"token operator\">&#x3C;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">{</span>\n        <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}\"</span><span class=\"token punctuation\">,</span> k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">let</span> ans<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u64</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span>b <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> a\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span>b <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> a <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}\"</span><span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2 id=\"所感\"><a href=\"#所感\">所感</a></h2>\n<p>考察を詰めきらずにふわふわした状態でB,Cをときがち.\n論文が一段落したので, しばらくはこれを書いてから実装するくらいの気持ちで精進してみる.</p>","description":"考察","commits":[{"title":"copy md","date":"2021-01-30 22:18:17","hash":"35b550ae","diff":"<div class=\"remark-highlight\"><pre data-file=\"35b550ae.patch\" class=\"language-git  language-diff\"><code class=\"language-git\"><span class=\"token commit-sha1\">commit 35b550ae83af4efaeadf33471c8ca8a32c1079c8</span>\nAuthor: koka &#x26;<a href=\"mailto:lt;koka.code@gmail.com\" class=\"token email-link\">lt;koka.code@gmail.com</a>&#x26;gt;\nDate:   Sat Jan 30 22:18:17 2021 +0900\n\n  copy md\n\ndiff --git a/_posts/2019-02-09-minpro2019.md b/_posts/2019-02-09-minpro2019.md\nnew file mode 100644\nindex 0000000..eb1daad\n<span class=\"token deleted\">--- /dev/null</span>\n<span class=\"token inserted\">+++ b/_posts/2019-02-09-minpro2019.md</span>\n<span class=\"token coord\">@@ -0,0 +1,148 @@</span>\n<span class=\"token inserted\">+---</span>\n<span class=\"token inserted\">+title: みんなのプロコン 2019</span>\n<span class=\"token inserted\">+date: 2019-02-09</span>\n<span class=\"token inserted\">+categories:</span>\n<span class=\"token inserted\">+- Competitive Programming</span>\n<span class=\"token inserted\">+tags:</span>\n<span class=\"token inserted\">+- AtCoder</span>\n<span class=\"token inserted\">+- TODO</span>\n<span class=\"token inserted\">+description: 考察</span>\n<span class=\"token inserted\">+---</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+みんなのプロコン 2019の参加記録.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+## [B - Path](https://atcoder.jp/contests/yahoo-procon2019-qual/tasks/yahoo_procon2019_qual_b)</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+4つの街と3つの道が与えられる. 一筆書で全ての街を訪れることができるか.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+制約</span>\n<span class=\"token inserted\">+&#x26;gt; 同じ街の対の間を結ぶ道は複数存在しない</span>\n<span class=\"token inserted\">+&#x26;gt; どの2つの街の間も、道を何本か通ることで行き来することができる</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+より, 全ての街を訪れることは可能であることがわかる.</span>\n<span class=\"token inserted\">+このとき道と街の組み合わせしてありうるのは以下の2パターン.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+&#x26;lt;div class=\"graph-wrapper\"&#x26;gt;</span>\n<span class=\"token inserted\">+&#x26;lt;div&#x26;gt;</span>\n<span class=\"token inserted\">+&#x26;lt;div class=\"graph graph1\"&#x26;gt;</span>\n<span class=\"token inserted\">+  &#x26;lt;div class=\"edge\" /&#x26;gt;</span>\n<span class=\"token inserted\">+  &#x26;lt;div class=\"node none\" /&#x26;gt;</span>\n<span class=\"token inserted\">+  &#x26;lt;div class=\"edge\" /&#x26;gt;</span>\n<span class=\"token inserted\">+&#x26;lt;/div&#x26;gt;</span>\n<span class=\"token inserted\">+&#x26;lt;div class=\"graph\"&#x26;gt;</span>\n<span class=\"token inserted\">+  &#x26;lt;div class=\"edge\" /&#x26;gt;</span>\n<span class=\"token inserted\">+  &#x26;lt;div class=\"node\" /&#x26;gt;</span>\n<span class=\"token inserted\">+  &#x26;lt;div class=\"edge cross vertical\" /&#x26;gt;</span>\n<span class=\"token inserted\">+&#x26;lt;/div&#x26;gt;</span>\n<span class=\"token inserted\">+&#x26;lt;div class=\"label\"&#x26;gt;A&#x26;lt;/div&#x26;gt;</span>\n<span class=\"token inserted\">+&#x26;lt;/div&#x26;gt;</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+&#x26;lt;div&#x26;gt;</span>\n<span class=\"token inserted\">+&#x26;lt;div class=\"graph graph2\"&#x26;gt;</span>\n<span class=\"token inserted\">+  &#x26;lt;div class=\"edge\" /&#x26;gt;</span>\n<span class=\"token inserted\">+  &#x26;lt;div class=\"node\" /&#x26;gt;</span>\n<span class=\"token inserted\">+  &#x26;lt;div class=\"edge\" /&#x26;gt;</span>\n<span class=\"token inserted\">+&#x26;lt;/div&#x26;gt;</span>\n<span class=\"token inserted\">+&#x26;lt;div class=\"graph\"&#x26;gt;</span>\n<span class=\"token inserted\">+  &#x26;lt;div class=\"edge\" /&#x26;gt;</span>\n<span class=\"token inserted\">+  &#x26;lt;div class=\"node\" /&#x26;gt;</span>\n<span class=\"token inserted\">+  &#x26;lt;div class=\"edge vertical\" /&#x26;gt;</span>\n<span class=\"token inserted\">+&#x26;lt;/div&#x26;gt;</span>\n<span class=\"token inserted\">+&#x26;lt;div class=\"label\"&#x26;gt;B&#x26;lt;/div&#x26;gt;</span>\n<span class=\"token inserted\">+&#x26;lt;/div&#x26;gt;</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+&#x26;lt;/div&#x26;gt;</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+一筆書き出来るのはB.  </span>\n<span class=\"token inserted\">+Aは1つの街から3本以上の道が存在する場合なので, 街から生えている道の本数で判定すればいい.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+### 解答</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+\\```rust</span>\n<span class=\"token inserted\">+use std::io;</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+fn main() {</span>\n<span class=\"token inserted\">+    let mut a = 0;</span>\n<span class=\"token inserted\">+    let mut b = 0;</span>\n<span class=\"token inserted\">+    let mut c = 0;</span>\n<span class=\"token inserted\">+    let mut d = 0;</span>\n<span class=\"token inserted\">+    for _ in 0..3 {</span>\n<span class=\"token inserted\">+        let ab = read::&#x26;lt;usize&#x26;gt;();</span>\n<span class=\"token inserted\">+        for i in ab {</span>\n<span class=\"token inserted\">+            match i {</span>\n<span class=\"token inserted\">+                1 =&#x26;gt; a += 1,</span>\n<span class=\"token inserted\">+                2 =&#x26;gt; b += 1,</span>\n<span class=\"token inserted\">+                3 =&#x26;gt; c += 1,</span>\n<span class=\"token inserted\">+                4 =&#x26;gt; d += 1,</span>\n<span class=\"token inserted\">+                _ =&#x26;gt; unreachable!(),</span>\n<span class=\"token inserted\">+            }</span>\n<span class=\"token inserted\">+        }</span>\n<span class=\"token inserted\">+    }</span>\n<span class=\"token inserted\">+ </span>\n<span class=\"token inserted\">+    if a &#x26;gt; 2 || b &#x26;gt; 2 || c &#x26;gt; 2 || d &#x26;gt; 2 {</span>\n<span class=\"token inserted\">+        println!(\"NO\");</span>\n<span class=\"token inserted\">+    } else {</span>\n<span class=\"token inserted\">+        println!(\"YES\");</span>\n<span class=\"token inserted\">+    }</span>\n<span class=\"token inserted\">+}</span>\n<span class=\"token inserted\">+\\```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+## [C - When I hit my pocket...](https://atcoder.jp/contests/yahoo-procon2019-qual/tasks/yahoo_procon2019_qual_c)</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+手持ちのビスケット1枚, 0円の状態から</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+- 持っているビスケットを増やす</span>\n<span class=\"token inserted\">+- ビスケット1枚をA円に交換</span>\n<span class=\"token inserted\">+- 1円をビスケットB枚の交換</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+以上の操作を好きな順に$k$回行ってビスケットの枚数を最大化する. なお虚無からビスケットを生成できるらしい.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ビスケット → 円 → ビスケットの両替には2ターン消費するので, 2枚以上の利益がなければ愚直にビスケットを増やすのと変わらない.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+なので $B-A &#x26;lt;= 2$の場合にはビスケットを増やす操作だけ行うのが最善.  </span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+$B-A&#x26;gt;2$の場合には, ビスケット→ 円→ ビスケット の操作でビスケットを$(B - A)$枚増産できる. 最終的に円を持っていても意味がないので, この一連の操作は操作は同じ回数行いたい.  </span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+簡単のために, ビスケットを0枚もっている状態から$k + 1$回の操作を行えるとする.  </span>\n<span class=\"token inserted\">+アプローチとしては,</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+1. A枚たまるまでビスケットを増やす</span>\n<span class=\"token inserted\">+2. 残り$k + 1 - A$回の操作で両替を繰り返す</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+手順2は$\\lfloor(k+1-a)/2\\rfloor$回行うことができる. 偶奇によっては操作回数が一回あまるが,</span>\n<span class=\"token inserted\">+ここでビスケット→ 円の両替をしても仕方がないのでビスケットを1枚増やす.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+### 解答</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+\\```rust</span>\n<span class=\"token inserted\">+use std::io;</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+fn main() {</span>\n<span class=\"token inserted\">+    let (k, a, b) = {</span>\n<span class=\"token inserted\">+        let i = read::&#x26;lt;u64&#x26;gt;();</span>\n<span class=\"token inserted\">+        (i[0], i[1], i[2])</span>\n<span class=\"token inserted\">+    };</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+    if a &#x26;gt;= b || b - a &#x26;lt;= 1{</span>\n<span class=\"token inserted\">+        println!(\"{}\", k + 1);</span>\n<span class=\"token inserted\">+        return;</span>\n<span class=\"token inserted\">+    }</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+    let ans: u64 = if (k + 1 - a) % 2 == 0 {</span>\n<span class=\"token inserted\">+        (b - a) * (k + 1 - a) / 2 + a</span>\n<span class=\"token inserted\">+    } else {</span>\n<span class=\"token inserted\">+        (b - a) * (k - a) / 2 + a + 1</span>\n<span class=\"token inserted\">+    };</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+    println!(\"{}\", ans);</span>\n<span class=\"token inserted\">+}</span>\n<span class=\"token inserted\">+\\```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+## 所感</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+考察を詰めきらずにふわふわした状態でB,Cをときがち. </span>\n<span class=\"token inserted\">+論文が一段落したので, しばらくはこれを書いてから実装するくらいの気持ちで精進してみる.</span>\n<span class=\"token inserted\">+</span>\n</code></pre></div>"}],"publishedAt":"2019-02-09","updatedAt":"2021-01-30"}},"__N_SSG":true}